\documentclass[letterpaper,12pt,oneside]{article}

\pagestyle{headings}
\pagenumbering{arabic}

\setlength{\hoffset}{-1.5cm}
\setlength{\voffset}{-2cm}
\setlength{\textheight}{24.5cm}
\setlength{\textwidth}{17cm}
\renewcommand{\baselinestretch}{1.3}

%\VignetteIndexEntry{OneMap Tutorial}

\SweaveOpts{eval=TRUE,echo=TRUE,results=hide,fig=FALSE}

\begin{document}
\begin{center}
  \begin{Large}
    {\bf OneMap Tutorial}
  \end{Large}
  
  \begin{large}
    {\bf Software for constructing genetic maps in outcrossing species}
  \end{large}
  
  \vspace{0.5cm}
  
  Gabriel Rodrigues Alves Margarido\textsuperscript{1}
  
  Marcelo Mollinari\textsuperscript{1}
  
  Antonio Augusto Franco Garcia\textsuperscript{1*}
\end{center}

\noindent \textsuperscript{1}Department of Genetics\\
Escola Superior de Agricultura ``Luiz de Queiroz'' (ESALQ), Universidade de S\~ao Paulo (USP)

\noindent Av. P\'adua Dias, 11 - Caixa Postal 83\\
CEP: 13400-970 - Piracicaba - S\~ao Paulo - Brazil\\
Tel: +55 19 34294125\\
Fax: +55 19 34336706\\
E-mail: aafgarci@esalq.usp.br

\vspace{0.5cm}

\noindent \textsuperscript{*}corresponding author

\begin{center}
  http://www.r-project.org
  
  \today
\end{center}


\section*{Overview}
\textsl{OneMap} is an environment for constructing linkage maps in outcrossing plant species, using full-sib families derived from two outbred (non-homozygous) parents. It is implemented as a package to be used under the freely distributed R software, which is a language and environment for statistical computing (www.r-project.org).

Wu et al. (2002a) proposed a methodology to construct genetic maps in outcrossing species, which allows the analysis of a mixed set of different marker types containing various segregation patterns. Also, it allows the simultaneous estimation of linkage and linkage phases between markers, and it was successfully applied in the analysis of sugarcane data sets (Garcia et al., 2006; Oliveira et al., 2007). Actually, the analysis of these sugarcane data sets motivated the implementation of \textsl{OneMap}. 

Despite those results, the construction of linkage maps could be greatly enhanced with the use of multipoint likelihood through Hidden Markov Models (HMM). Jiang and Zeng (1997) explained in detail this methodology, emphasizing its advantages and limitations, for populations derived from inbred lines. Merging the ideas of Wu et al. (2002a) and the HMM framework, as done by Wu et al. (2002b), led us to develop this new version of \textsl{OneMap}.

This new version (1.0-0) handles two-point analysis between markers and performs the grouping step in the same way in the previous version (0.1-1), following Wu et al. (2002a) approach. However, marker ordering in a linkage group can be done not only using Rapid Chain Delineation - RCD (Doerge, 1996), but also through HMM-based algorithms, in the same way as implemented in MAPMAKER/EXP (Lander et al., 1987). The three-point test is maintained as defunct in version 1.0-0 only for historical reasons.

\textsl{OneMap} is available as source code for Windows\texttrademark \ and Unix. It is released under the GNU General Public License, is open-source and the code can be changed freely. It comes with no warranty.

To download the free software R, please visit the Comprehensive R Archive Network (cran.r-project.org). The user of \textsl{OneMap} is supposed to have some experience with R, since the analysis is done using the command line. R comes with a `getting started manual' and various others useful documents can be found on CRAN and by searching the web. This tutorial will not discuss basic R usage and assumes that the user has some experience on it.

After installing R, \textsl{OneMap} can be installed by opening R and issueing the command

<<eval=FALSE>>=
install.packages("onemap")
@ 

\textsl{OneMap} can also be installed by downloading the appropriate files directly at the CRAN web site and following the instructions given in the section ``6.3 Installing Packages'' of the ``R Installation and Administration'' manual (http://cran.r-project.org/doc/manuals/R-admin.pdf).

\section*{Citation}

\parshape2 0pt \linewidth 0.8cm 16.2cm
Margarido, G.R.A., Souza, A.P. and Garcia, A.A.F. OneMap: software for genetic mapping in outcrossing species. \textbf{\textit{Hereditas}} 144: 78-79, 2007.

\section*{Introduction to OneMap}
\textsl{OneMap} is comprised by a small set of functions (listed below). There are other functions used internally by the software. However, you do not need to use them directly.

\begin{table}[!ht]
  \centering
  \small
  \begin{tabular}{lll}
    \textbf{Function type} & \textbf{Function name} & \textbf{Function description} \\
    \hline
    \textbf{Input} & read.outcross & Read data from an outcross \\
    \hline
    \textbf{Data manipulation} & make.seq & Creates a sequence of markers based on objects of \\
                               &          & other types \\
                               & marker.type  & Informs the segregation type of a genetic marker \\
                               & add.marker  & Adds markers to a sequence\\
                               & drop.marker & Drops markers from a sequence\\
    \hline
    \textbf{Genetic mapping} & rf.2pts        & Estimates recombination fractions (two points) \\
                             & group          & Assigns markers to linkage groups \\
                             & rcd            & Orders markers in a sequence using RCD algorithm \\
                             & compare        & Compares all possible orders of markers in a sequence \\
                             & try.seq        & Tries to map a marker into a given linkage group \\
                             & order.seq      & Automates map construction through ``compare'' and \\
                             &                & ``try.seq'' functions \\
                             & ripple         & Compares alternative orders for a map and displays \\ 
                             &                & the plausible ones \\
                             & map            & Constructs a multipoint linkage map for a sequence \\
                             &                & in a given order \\
                             & rf.graph.table & Plots a pairwise recombination fraction matrix using\\ 
    &                & a color scale. \\
    \hline
    \textbf{Defunct} & def.rf.3pts & Estimates recombination fractions (three points method) \\
  \end{tabular}
\end{table}
   

\section*{Getting started}
The following example is intended to show the usage of all \textsl{OneMap} functions. With basic knowledge of R syntax, one should have no big problems using it. It is assumed that the user is running Windows\texttrademark. Hopefully, these examples will be clear enough to help any user to understand its functionality and start using it.
\begin{enumerate}
\item Start R by double-clicking its icon.

\item Load \textsl{OneMap} (after installing it):
<<eval=FALSE>>=
library(onemap)
@ 

\item To save your project anytime, type:
<<eval=FALSE>>=
save.image("C:/.../yourfile.RData")
@
or access the toolbar File $\to$ Save Workspace.
\end{enumerate}


\section*{Creating the data file}
This step might be quite difficult, since the data file is not very simple and many errors can occur while reading it. The input file format is similar to that used by MAPMAKER/EXP (Lander et al., 1987), so experienced users of genetic analysis software should be familiarized with it.

Basically, the input file is a text file with a first line indicating the number of individuals and the number of markers. Then, the genotype information is included separately for each marker. The character ``*'' indicates the beginning of information input for a new marker, followed by the marker name. Next, there is a code indicating the marker type, according to Wu's et al. (2002a) notation. In short, Wu et al. (2002a) classified marker types in the following way:

\begin{center}
\scriptsize
  \centering
  \begin{tabular}{c c r r c l c r c l c c c}
    \hline \hline
          &      &     & \multicolumn {7}{p{3cm}}{Parent}	& &\multicolumn {2}{p{3cm}}{Offspring}	\\
        \cline{4-10} \cline{12-13}
          &      & crosstype & \multicolumn {3}{p{.4cm}}{Cross}& & \multicolumn {3}{p{.4cm}} {Observed bands} &  & Observed bands	& Segregation	\\
        \hline
        A &     & 1 & $ab $ & $\times$ & $ cd$  & & $ab $ & $\times$ & $ cd$  & & $ac, ad, bc, bd$ & 1:1:1:1 \\
          &     & 2 & $ab $ & $\times$ & $ ac$  & & $ab $ & $\times$ & $ ac$  & & $ a, ac, ba, bc$ & 1:1:1:1 \\
          &     & 3 & $ab $ & $\times$ & $ co$  & & $ab $ & $\times$ & $ c$   & & $ac,  a, bc,  b$ & 1:1:1:1 \\
          &     & 4 & $ao $ & $\times$ & $ bo$  & & $a $  & $\times$ & $ b$   & & $ab,  a,  b,  o$ & 1:1:1:1 \\[1.2ex]
        B &B$_1$& 5 & $ab $ & $\times$ & $ ao$  & & $ab $ & $\times$ & $ a$   & & $ab, 2a,  b$     & 1:2:1\\[1.2ex]
          &B$_2$& 6 & $ao $ & $\times$ & $ ab$  & & $a $  & $\times$ & $ ab$  & & $ab, 2a,  b$     & 1:2:1\\[1.2ex]
          &B$_3$& 7 & $ab $ & $\times$ & $ ab$  & & $ab $ & $\times$ & $ ab$  & & $a, 2ab,  b$     & 1:2:1\\[1.2ex]
        C &     & 8 & $ao $ & $\times$ & $ ao$  & & $a $  & $\times$ & $ a$   & & $3a, o$          & 3:1\\[1.2ex]
        D &D$_1$& 9 & $ab $ & $\times$ & $ cc$  & & $ab $ & $\times$ & $ c$   & & $ac, bc$         & 1:1 \\
          &     & 10& $ab $ & $\times$ & $ aa$  & & $ab $ & $\times$ & $ a$   & & $a, ab$         & 1:1 \\
          &     & 11& $ab $ & $\times$ & $ oo$  & & $ab $ & $\times$ & $ o$   & & $a, b$           & 1:1 \\
          &     & 12& $bo $ & $\times$ & $ aa$  & & $b $  & $\times$ & $  a$  & & $ab, a$          & 1:1 \\
          &     & 13& $ao $ & $\times$ & $ oo$  & & $a $  & $\times$ & $  o$  & & $a, o$           & 1:1 \\[1.2ex]
          &D$_2$& 14& $cc $ & $\times$ & $ ab$  & & $c  $ & $\times$ & $ ab$  & & $ac, bc$         & 1:1 \\
          &     & 15& $aa $ & $\times$ & $ ab$  & & $a $  & $\times$ & $ ab$  & & $a, ab$          & 1:1 \\
          &     & 16& $oo $ & $\times$ & $ ab$  & & $o $  & $\times$ & $ ab$  & & $a, b$           & 1:1 \\
          &     & 17& $aa $ & $\times$ & $ bo$  & & $a  $ & $\times$ & $ b$   & & $ab, a$          & 1:1 \\
          &     & 18& $oo $ & $\times$ & $ ao$  & & $o $  & $\times$ & $  a$  & & $a, o$           & 1:1 \\
        \hline \hline
      \end{tabular}
\end{center}

Actually, it is strongly recommended to check Wu et al. (2002a) paper before using \textsl{OneMap}. Marker types must be one of the following: \textsl{A.1, A.2, A.3, A.4, B1.5, B2.6, B3.7, C.8, D1.9, D1.10, D1.11, D1.12, D1.13, D2.14, D2.15, D2.16, D2.17} or \textsl{D2.18}. The letter and the number before the dot indicate the segregation type (i.e., 1:1:1:1, 1:2:1, 3:1 or 1:1), while the number after the dot indicates the offspring observed bands. The paper cited above gives details with respect to marker types; we will not discuss them here. 

Finally, after each marker name, comes the genotype data for the segregating population. The coding for marker genotypes used by \textsl{OneMap} is also the same one proposed by Wu et al. (2002a) and the possible values vary according to the marker type. Missing data are indicated with the character ``-'' and a comma separates the information for each individual.

Here is an example of such file for 10 individuals and 5 markers:

\begin{verbatim}
   10 5
   *M1 B3.7        ab,ab,-,ab,b,ab,ab,-,ab,b
   *M2 D2.18       o,-,a,a,-,o,a,-,o,o
   *M3 D1.13       o,a,a,o,o,-,a,o,a,o
   *M4 A.4         ab,b,-,ab,a,b,ab,b,-,a
   *M5 D2.18       a,a,o,-,o,o,a,o,o,o
\end{verbatim}

The input file must be saved in text format, with extensions like ``.txt''. It is a good idea to open the text file called ``example\_out.txt'', available with \textsl{OneMap}, and saved on the directory you installed it, to see how your file should be.

\section*{Importing data}
\begin{enumerate}
\item Once the input file is created, data can be loaded into R. The function used to import data is named \texttt{read.outcross}. Its usage is quite simple:
<<eval=FALSE>>=
example <- read.outcross("C:/workingdirectory","example_out.txt")
@ 
<<eval=FALSE,echo=FALSE>>=
example <- read.outcross(system.file("example",package="onemap"),"example_out.txt")
@ 
The first argument is the directory where the input file is located and the second one is the file name.

\item You can change the working directory in R using function \texttt{setwd()} or in the toolbar clicking File $\to$ Change dir. If you set your working directory to the one containing the input file, you can just type:
<<eval=FALSE>>=
example <- read.outcross(file="example_out.txt")
@ 

If no error has occurred, a message will display some basic information about the data, such as number of individuals and number of markers:
<<eval=FALSE,echo=FALSE, results=verbatim>>=
example <- read.outcross(system.file("example",package="onemap"),"example_out.txt")
@ 

\item Because this particular data set is distributed along with the package, you can load it simply typing
<<eval=FALSE>>=
data(example_out)
@ 

\item Loading the data creates an object of class \texttt{outcross}, which will further be used in the analysis. R command \texttt{print} recognizes objects of this class. Thus, if you type
<<eval=FALSE>>=
example
@

you will see some information about the object.
<<eval=FALSE,echo=FALSE, results=verbatim>>=
example
@ 

\end{enumerate}

\section*{Estimating two-point recombination fractions}
\begin{enumerate}
\item To start the mapping analysis, the first step is estimating the recombination fraction between all pairs of markers, using two-point tests:
<<eval=FALSE>>=
twopts <- rf.2pts(example)
@ 
This command uses as default values of LOD-Score 3 and maximum recombination fraction 0.35.

\item Different values for the criteria can be chosen using:
<<eval=FALSE>>=
twopts <- rf.2pts(example, LOD=3, max.rf=0.4)
@ 

\item Although the two-point test was implemented in C language, which is much faster than R, this step can take quite some time, depending on the number of markers involved and their segregation type, since all combinations will be estimated and tested. Besides, the results use a lot of memory and a rather powerful computer is needed. For example, the analysis of a real data set with 1741 markers (segregating 3:1 and 1:1) took 2.8 hours, running under Windows\texttrademark \ on a Pentium\textsuperscript{\textregistered} 4 CPU 3.00 GHz with 1 GB RAM memory.

\item When the two-point analysis is finished, an object of class \texttt{rf.2pts} is created. Typing
<<eval=FALSE>>=
twopts
@ 
will show a message with the criteria used in the analysis and information about printing details of this object:

<<eval=FALSE, echo=FALSE, results=verbatim>>=
twopts
@ 


\item If you want to see the results for given markers, say \texttt{M1} and \texttt{M3}, the command is:
<<eval=FALSE,results=verbatim>>=
print(twopts, "M1", "M3")
@ 

Each line indicates a possible linkage phase. 1 denotes coupling phase in both parents (CC), 2 and 3 denote coupling phase in parent 1 and 2, respectively, and repulsion in the other (CR and RC), and 4 denotes repulsion phase in both parents (RR).

\end{enumerate}

\section*{Assigning markers to linkage groups}
\begin{enumerate}
\item Once the recombination fractions and linkage phases for all pairs of markers have been estimated and tested, markers can be assigned to linkage groups. To do this, first use the function \texttt{make.seq} to create a sequence with all markers:
<<eval=FALSE>>=
mark.all <- make.seq(twopts, "all")
@
The function \texttt{make.seq} is used to create sequences from objects of several kinds, as will be seen along this tutorial. Here, the object is of class \texttt{rf.2pts} and the second argument specifies which markers one want to use. In this example, \texttt{"all"} indicates that all markers will be analyzed. If one wants to use only markers one and two, for example, the option will be \texttt{c(1,2)}. These numbers refer to the lines where the markers are located on the data file. Function \texttt{marker.type} could be helpful (\texttt{M1} and \texttt{M2} in this case). 

\item The grouping step is very simple and can be done by using the function \texttt{group}:
<<eval=FALSE>>=
LGs <- group(mark.all)
@ 
For this function, optional arguments are \texttt{LOD} and \texttt{max.rf}, which define thresholds to be used when assigning markers to linkage groups. If none provided (default), criteria previously defined for the object \texttt{twopts} are used.

\item The previous command generates an object of class \texttt{group} and the command \texttt{print} for such object has two options. If you simply type:
<<eval=FALSE>>=
LGs
@ 

you will get detailed information about the groups, i.e., all linkage groups will be printed, displaying the names of markers in each one of them.
<<eval=FALSE,echo=FALSE, results=verbatim>>=
LGs
@ 

However, in case you just want to see some basic information (such as the number of groups, number of linked markers and more), the command is:
<<eval=FALSE,results=verbatim>>=
print(LGs, detailed=FALSE)
@ 

\item You can notice that all markers are linked to some linkage group. If the LOD-Score threshold is changed to a higher value, some markers are kept unassigned:
<<eval=FALSE>>=
LGs <- group(mark.all, LOD=6)
LGs
@ 

\item Changing back to the previous criteria, now setting the maximum recombination fraction to 0.40:
<<eval=FALSE,results=verbatim>>=
LGs <- group(mark.all, LOD=3, max.rf=0.4)
LGs
@ 
\end{enumerate}

\section*{Genetic mapping of linkage group 3}
\begin{enumerate}
\item When marker assignment to linkage groups is finished, the mapping step can take place. First of all, you must set the mapping function that should be used to display the genetic map through the analysis. You can choose between Kosambi or Haldane mapping function. To use Haldane, type
<<eval=FALSE>>=
set.map.fun(type="haldane")
@

To use Kosambi
<<eval=FALSE>>=
set.map.fun(type="kosambi")
@

Now, you must define which linkage group will be mapped. In other words, a linkage group must be ``extracted'' from the object of class \texttt{group}, in order to be mapped. For simplicity, we will start here with the smallest one, which is linkage group 3. This can be easily done using the following code:
<<eval=FALSE>>=
LG3 <- make.seq(LGs, 3)
@ 
The first argument (\texttt{LGs}) is an object of class \texttt{group} and the second is a number indicating which linkage group will be extracted, according to the results present in object \texttt{LGs}. The object \texttt{LG3}, generated by function \texttt{make.seq}, is of class \texttt{sequence}, showing that this function can be used with several types of objects.

\item If you type
<<eval=FALSE>>=
LG3
@ 
you will see which markers are comprised in the sequence, and also that no parameters are estimated.
<<eval=FALSE,echo=FALSE, results=verbatim>>=
LG3
@ 

\item To obtain a preliminary order of these markers, the \texttt{rcd} function can be used:
<<eval=FALSE>>=
LG3.rcd <- rcd(LG3)
@ 
Note: occasionally there will be some warning messages indicating that the EM algorithm did not converge for some maps. These generally occur when the software tests some incorrect combinations of linkage phases and do not present any problem.

\item To order the markers in linkage group 3 (\texttt{LG3}), by evaluating all possible orders, the function \texttt{compare} can be used:
<<eval=FALSE>>=
LG3.comp <- compare(LG3)
@ 

This step takes some time, because this sequence contains one marker of type D1 and one of type D2, besides one marker segregating in 3:1 fashion (type C). Thus, although the number of possible orders is relatively small (60), for each order there are various possible combinations of linkage phases. Also, the convergence of the EM algorithm takes considerably more time, since markers of type C are not very informative. 

The first argument is an object of class \texttt{sequence} (the extracted group \texttt{LG3}) and the object generated by this function is of class \texttt{compare}.

\item To see the results of the previous step, type
<<eval=FALSE,results=verbatim>>=
LG3.comp
@ 

By default, the software stores 50 orders, which may or may not be unique. 

In this example, note that there are nine possible unique orders. The value of \texttt{LOD} refers to the overall LOD-Score, considering all orders tested. \texttt{Nested LOD} refers to LOD-Scores \emph{within} a given order, i.e., scores for different combinations of linkage phases for the same order.

For example, order 1 has the largest value of log-likelihood and, therefore, its LOD-Score is zero for some combination of linkage phases. For this same order and other linkage phases, LOD-Score is -2.43.
g
Analyzing the results for order 2, notice that its highest LOD-Score is very close to zero, indicating that this order is also quite plausible. Notice also that \texttt{Nested LOD} will always contain at least one zero value, corresponding to the best combination of phases for markers in a given order.

\item Since it is a good idea to choose the order with the highest likelihood, the final map can be obtained with the command
<<eval=FALSE>>=
LG3.final <- make.seq(LG3.comp,1,1)
@ 

The first argument is the object of class \texttt{compare}. The second argument indicates which order is chosen: 1 is for the order with highest likelihood, 2 is for the second best, and so on. The third argument indicates which combination of phases is chosen for this specific order: 1 also means the combination with highest likelihood.

For simplicity, these values are defaults, so typing
<<eval=FALSE>>=
LG3.final <- make.seq(LG3.comp)
@ 
will have the same effect.

\item To see the final map, simply type
<<eval=FALSE,results=verbatim>>=
LG3.final
@ 

At the leftmost position, marker names are displayed. \texttt{Position} shows the cumulative distance using the Kosambi mapping function, as defined above. Finally, \texttt{Parent 1} and \texttt{Parent 2} show the diplotypes of both parents, that is, the manner in which alleles are arranged in the chromosomes. Notation is the same as that used by Wu et al. (2002a).
\end{enumerate}

\section*{Genetic mapping of linkage group 2}
\begin{enumerate}
\item Now let us map the markers in linkage group number 2. Again, ``extract'' that group from the object \texttt{LGs}:
<<eval=FALSE>>=
LG2 <- make.seq(LGs, 2)
LG2
@ 
Note that there are 10 markers in this group, so it is unfeasible to use the \texttt{compare} function with all of them since it will take a long time to proceed.

\item First, use \texttt{rcd} to get a first order estimate:
<<eval=FALSE>>=
LG2.rcd <- rcd(LG2)
LG2.rcd
@ 

\item Use the \texttt{marker.type} function to check the segregation types of all markers in this group:
<<eval=FALSE>>=
marker.type(LG2)
@ 

\item Based on their segregation types and distribution on the preliminary map, markers M4, M9, M19, M20 and M24 are the most informative ones (type A is the better, followed by type B). So, let us create a framework of markers using \texttt{compare}:
<<eval=FALSE>>=
LG2.init <- make.seq(twopts,c(4,9,19,20,24))
LG2.comp <- compare(LG2.init)
LG2.comp
@ 
Now, the first argument to \texttt{make.seq} is an object of class \texttt{rf.2pts}, and the second argument is a vector of integers, specifying which molecular markers will constitute the sequence.

\item Select the best order:
<<eval=FALSE>>=
LG2.frame <- make.seq(LG2.comp)
@ 

\item Next, try to map the remaining markers. Since there are more markers of type D1 than D2, the latter will be tried in the end:
<<eval=FALSE,results=verbatim>>=
LG2.extend <- try.seq(LG2.frame,27)
LG2.extend
@ 
Based on the LOD-Scores, marker M27 is probably located on the beginning of the group. However, the ``*'' symbol indicates that more than one linkage phase is possible. Detailed results can be seen with:

<<eval=FALSE,results=verbatim>>=
print(LG2.extend,1)
@
where the second argument indicates the position where the marker was placed. Note that there are two combinations of linkage phases with the same LOD-Score. This happens because marker M27 is of type D1, so coupling-coupling (CC) and coupling-repulsion (CR) actually correspond to the same allele arrangement. This does not represent a problem.

\item The best order can be obtained with:
<<eval=FALSE>>=
LG2.frame <- make.seq(LG2.extend,1,1)
@ 
When using \texttt{make.seq} with an object of class \texttt{try}, the second argument is the position on the map (according to the scale to the right in the output) and the last argument indicates the combination of phases. The same can be done with (omitting the combination of phases):
<<eval=FALSE>>=
LG2.frame <- make.seq(LG2.extend,1)
LG2.frame
@ 
Continuing with other markers, one by one:
<<eval=FALSE>>=
LG2.extend <- try.seq(LG2.frame,29)
LG2.extend
LG2.frame <- make.seq(LG2.extend,7)
LG2.frame
LG2.extend <- try.seq(LG2.frame,23)
LG2.extend
LG2.frame <- make.seq(LG2.extend,5)
LG2.frame
LG2.extend <- try.seq(LG2.frame, 16)
LG2.extend
LG2.frame <- make.seq(LG2.extend,2)
LG2.frame
LG2.extend <- try.seq(LG2.frame,21)
LG2.extend
LG2.final <- make.seq(LG2.extend,6)
@ 

\item Compare the order obtained through \texttt{rcd} and that obtained via HMM:
<<eval=FALSE,results=verbatim>>=
LG2.rcd
LG2.final
@ 
Although \texttt{rcd} can result in a few different orders for this linkage group, the likelihood of the HMM-based order is always higher in this case.

\item This process of adding markers sequentially can be automated with the use of function \texttt{order.seq}.
<<eval=FALSE>>=
LG2.ord <- order.seq(LG2, n.init=5, THRES=3)
@ 
In the syntax above, \texttt{n.init = 5} means that five markers (the most informative ones) will be used in the \texttt{compare} step; \texttt{THRES = 3} indicates that the \texttt{try.seq} step will only add markers to the sequence which can be mapped with LOD-Score higher than 3.
NOTE: Although very useful, this function can be misleading, specially if there are not many fully informative markers, so use it carefully.

\item Check the final order:
<<eval=FALSE>>=
LG2.ord
@ 
and note that markers \texttt{16}, \texttt{21} and \texttt{29} could not be safely mapped to a single position (\texttt{LOD-Score > THRES} in absolute value). The output displays the ``safe'' order and the most likely positions for unmapped markers, where ``***'' indicates the most likely position and ``*'' corresponds to other plausible positions.

\item To get the safe order, use
<<eval=FALSE>>=
LG2.safe <- make.seq(LG2.ord,"safe")
LG2.safe
@ 
and to get the order with all markers, use
<<eval=FALSE>>=
LG2.all <- make.seq(LG2.ord,"force")
LG2.all
@ 
Notice that, for this linkage group, the ``forced'' map obtained with \texttt{order.seq} is the same as that constructed before with \texttt{compare} plus \texttt{try.seq}, but \emph{this is not always the case}.

\item The \texttt{order.seq} function can perform two rounds of the \texttt{try.seq} step, first using \texttt{THRES} and then \texttt{THRES - 1} as threshold. This generally results in safe orders with more markers mapped, but takes longer to run. To do this,type:
<<eval=FALSE>>=
LG2.ord <- order.seq(LG2, n.init=5, THRES=3, touchdown=TRUE)
LG2.ord
@ 
For this particular sequence, the \texttt{touchdown} step could not map any additional marker, but this will not happen all time.

\item Finally, to check for alternative orders, use the \texttt{ripple} function:
<<eval=FALSE>>=
ripple(LG2.final, ws=4, LOD=3)
@ 
The second argument, \texttt{ws = 4}, means that subsets (windows) of four markers will be permutated sequentially (\texttt{$4!$} orders for each window), to search for other plausible orders. The \texttt{LOD} argument means that only orders with LOD-Score smaller than 3 will be printed.

\item The \texttt{ripple} command showed that the final order obtained is indeed the best for this linkage group. The map can than be obtained using
    
<<eval=FALSE,results=verbatim>>=
LG2.all
@

\end{enumerate}

\section*{Genetic mapping of linkage group 1}
\begin{enumerate}
\item Finally, linkage group 1 (the largest one) will be mapped. Extract and map it using \texttt{rcd}:
<<eval=FALSE>>=
LG1 <- make.seq(LGs, 1)
LG1.rcd <- rcd(LG1)
LG1.rcd
@ 

\item Construct the linkage map:
<<eval=FALSE>>=
LG1.ord <- order.seq(LG1, n.init=6, touchdown=TRUE)
LG1.ord
@ 
Notice that the second round of \texttt{try.seq} added markers \texttt{M11} and \texttt{M25}.

\item Now, get the order with all markers:
<<eval=FALSE>>=
LG1.final <- make.seq(LG1.ord,"force")
LG1.final
@ 
Compared to the \texttt{rcd} order, this final map has markers \texttt{M12} and \texttt{M30} in different positions resulting in higher log-likelihood.

\item Check the final map:
<<eval=FALSE>>=
ripple(LG1.final)
@ 

\item Print it
<<eval=FALSE,results=verbatim>>=
LG1.final
@
\end{enumerate}

\section*{Map estimation for a given order}
\begin{enumerate}
\item If, for any reason, one wants to estimate parameters for a given linkage map, it is possible to define a sequence and use the \texttt{map} function. For example, for markers \texttt{M30}, \texttt{M12}, \texttt{M3}, \texttt{M14} and \texttt{M2}, in this order, use
  
<<eval=FALSE>>=
any.seq <- make.seq(twopts,c(30,12,3,14,2))
any.seq.map <- map(any.seq)
@ 
This is a subset of the first linkage group. When used like this, \texttt{map} function searches for the best combination of phases between markers.

\item Furthermore, a sequence can also have user-defined linkage phases. The next example shows incorrect phases for the same order of markers:
<<eval=FALSE>>=
any.seq <- make.seq(twopts,c(30,12,3,14,2),phase=c(4,1,4,3))
any.seq.map <- map(any.seq)
@ 

\item If one needs to add or drop markers from a predefined sequence, use the functions \texttt{add.marker} and \texttt{drop.marker}. Adding markers 4 to 8 in \texttt{any.seq} can be done using
<<eval=FALSE>>=
any.seq <- add.marker(any.seq, 4:8)
any.seq
@

Removing markers 3, 4, 5, 12 and 30 from \texttt{any.seq}: 
<<eval=FALSE>>=
any.seq <- drop.marker(any.seq, c(3,4,5,12,30))
any.seq
@
\end{enumerate}

\section*{Plotting the Recombination Fraction Matrix}
\begin{enumerate}
\item For a given sequence, it is possible to plot the recombination fraction matrix based on a color scale using the function \texttt{rf.graph.table}. This matrix can be useful to make some diagnostics about the map. For example, using the function \texttt{group} with \texttt{LOD=2.5}:

<<eval=FALSE>>=
LGs <- group(mark.all, LOD=2.5)
LGs
@ 

This value of \texttt{LOD} wrongly results in linkage groups with markers from distinct ones (\texttt{LG2} and \texttt{LG3}) in the same group. Ordering markers will provide

<<eval=FALSE>>=
LG.err<-make.seq(LGs, 2)
LG.err.ord<-order.seq(LG.err)
LG.err.ord
@

\item The map with option ``force'' is:

<<eval=FALSE>>=
LG.err.map<-make.seq(LG.err.ord, "force")
@ 

\item However, plotting the recombination fraction matrix will result in:

<<eval=FALSE, echo=TRUE>>=
rf.graph.table(LG.err.map)
@

<<eval=FALSE, echo=FALSE,fig=TRUE>>=
rf.graph.table(LG.err.map, inter=FALSE)
@ 

The color scale varies from red (small distances) to dark blue. This scale follows the ``rainbow'' color palette with \texttt{start} argument equal to 0 and \texttt{end} argument equal to 0.65. Clicking on the cell corresponding to two markers (off secondary diagonal), you can see some information about them. For example, clicking on the cell corresponding to markers \texttt{M4} and \texttt{M19} you can see their names, types (\texttt{A.4} and \texttt{B1.5}), recombination fraction (\texttt{rf=0.02281}) and LOD-Scores for each possible linkage phase. 

Looking at the whole matrix, it is possible to see a sub-division in two groups: one with markers from \texttt{LG2} (\texttt{M27 M16 M20 M4 M19 M21 M23 M9 M24 M29}) and other with markers from \texttt{LG3} (\texttt{M18 M8 M13 M7 M22}). Following the secondary diagonal of the matrix, there is a gap between markers \texttt{M18} and \texttt{M29} (\texttt{rf=0.4322}). At this position, the group should be divided, that is, a higher LOD-Score should be used.  Notice that these two groups were placed together due to a false linkage (false positive) detected between markers \texttt{M4} and \texttt{M22}, which has LOD-Score 2.9. 

The \texttt{rf.graph.table} can also be used to check the order of markers based on the monotonicity of the matrix, i.e. as we get away from the secondary diagonal, the recombination fraction values should increase.

\end{enumerate}

\section*{Final comments}
At this point it should be clear that any potential \textsl{OneMap} user must have some knowledge about genetic mapping and also the R language, since the analysis is not done with \textsl{only one mouse click}. In the future, perhaps a graphical interface will be made available to make this software a lot easier to use. Any suggestions and critics are welcome.

Currently, there is not a graphical function included in \textsl{OneMap} to draw the map. But once the distances and the linkage phases are estimated, map figures could be easily done. Also, there are several free softwares that can be used, such as MapChart (Voorrips, 2002).

\section*{References}
\setlength{\parindent}{0cm}

\parshape2 0pt \linewidth 0.8cm 16.2cm
Broman, K. W., Wu, H., Churchill, G., Sen, S., Yandell, B. \textbf{\textit{qtl: Tools for analyzing QTL experiments}} R package version 1.09-43, 2008.

\parshape2 0pt \linewidth 0.8cm 16.2cm
Doerge, R.W. Constructing genetic maps by rapid chain delineation. \textbf{\textit{Journal of Agricultural Genomics}} 2, 1996.

\parshape2 0pt \linewidth 0.8cm 16.2cm
Garcia, A.A.F., Kido, E.A., Meza, A.N., Souza, H.M.B., Pinto, L.R., Pastina, M.M., Leite, C.S., Silva, J.A.G., Ulian, E.C., Figueira, A. and Souza, A.P. Development of an integrated genetic map of a sugarcane (\textit{Saccharum spp.}) commercial cross, based on a maximum-likelihood approach for estimation of linkage and linkage phases. \textbf{\textit{Theoretical and Applied Genetics}} 112, 298-314, 2006.

\parshape2 0pt \linewidth 0.8cm 16.2cm
Haldane, J. B. S. The combination of linkage values and the calculation of distance between the loci of linked factors. \textbf{\textit{Journal of Genetics}} 8, 299-309, 1919.

\parshape2 0pt \linewidth 0.8cm 16.2cm
Jiang, C. and Zeng, Z.-B. Mapping quantitative trait loci with dominant and missing markers in various crosses from two inbred lines. \textbf{\textit{Genetica}} 101, 47-58, 1997.

\parshape2 0pt \linewidth 0.8cm 16.2cm
Kosambi, D. D. The estimation of map distance from recombination values. \textbf{\textit{Annuaire of Eugenetics}} 12, 172-175, 1944.

\parshape2 0pt \linewidth 0.8cm 16.2cm
Lander, E. S. and Green, P. Construction of multilocus genetic linkage maps in humans. \textbf{\textit{Proc. Natl. Acad. Sci. USA}} 84, 2363-2367, 1987.

\parshape2 0pt \linewidth 0.8cm 16.2cm
Lander, E.S., Green, P., Abrahanson, J., Barlow, A., Daly, M.J., Lincoln, S.E. and Newburg, L. MAPMAKER, An interactive computing package for constructing primary genetic linkage maps of experimental and natural populations. \textbf{\textit{Genomics}} 1, 174-181, 1987.

\parshape2 0pt \linewidth 0.8cm 16.2cm
Lincoln, S. E., Daly, M. J. and Lander, E. S. Constructing genetic linkage maps with MAPMAKER/EXP Version 3.0: a tutorial and reference manual. \textbf{\textit{A Whitehead Institute for Biomedical Research Technical Report}} 1993.

\parshape2 0pt \linewidth 0.8cm 16.2cm
Margarido, G. R. A., Souza, A.P. and Garcia, A. A. F. OneMap: software for genetic mapping in outcrossing species. \textbf{\textit{Hereditas}} 144, 78-79, 2007.

\parshape2 0pt \linewidth 0.8cm 16.2cm
Oliveira, K.M., Pinto, L.R., Marconi, T.G., Margarido, G.R.A., Pastina, M.M., Teixeira, L.H.M., Figueira, A.M., Ulian, E.C., Garcia, A.A.F., Souza, A.P. Functional genetic linkage map on EST-markers for a sugarcane ({\it Saccharum} spp.) commercial cross. \textbf{\textit{Molecular Breeding}} 20, 189-208, 2007.

\parshape2 0pt \linewidth 0.8cm 16.2cm
Oliveira, E. J., Vieira, M. L. C., Garcia, A. A. F., Munhoz, C. F.,Margarido, G. R.A., Consoli, L., Matta, F. P., Moraes, M. C., Zucchi, M. I., and Fungaro,M. H. P. An Integrated Molecular Map of Yellow Passion Fruit Based on Simultaneous Maximum-likelihood Estimation of Linkage and Linkage Phases \textbf{\textit{J. Amer. Soc. Hort. Sci.}} 133, 35-41, 2008. 

\parshape2 0pt \linewidth 0.8cm 16.2cm
Voorrips, R.E. MapChart: software for the graphical presentation of linkage maps and QTLs. \textbf{\textit{Journal of Heredity}} 93, 77-78, 2002.

\parshape2 0pt \linewidth 0.8cm 16.2cm
Wu, R., Ma, C.X., Painter, I. and Zeng, Z.B. Simultaneous maximum likelihood estimation of linkage and linkage phases in outcrossing species. \textbf{\textit{Theoretical Population Biology}} 61, 349-363, 2002a.

\parshape2 0pt \linewidth 0.8cm 16.2cm
Wu, R., Ma, C.-X., Wu, S. S. and Zeng, Z.-B. Linkage mapping of sex-specific differences. \textbf{\textit{Genetical Research}} 79, 85-96, 2002b.

\begin{center}
  \Huge{Apendix}
\end{center}

\section*{DEFUNCT - Checking the map with three-point analysis}
For historical reasons, three-point analyses are maintained in \textsl{OneMap}, but the same (and a lot more) can be done using the multipoint approach.

\begin{enumerate}
\item The function \texttt{def.rf.3pts} is used as follows:
<<eval=FALSE>>=
def.rf.3pts(example, "M18", "M8", "M13")
@ 
The first argument is the object with the input data, of class \texttt{outcross}. Then, three ordered markers are specified.

In this case, the assignments ``\texttt{A11}'', ``\texttt{A12}'', $\ldots$, have similar meanings to those of the two-point analysis: \texttt{1} means coupling/coupling, \texttt{2} is for coupling/repulsion, \texttt{3} is for repulsion/coupling and \texttt{4} is for repulsion/repulsion. The first number is the linkage phase between markers \texttt{M$_{\mbox{i}}$} and \texttt{M$_{\mbox{i+1}}$}, while the second number is the linkage phase between markers \texttt{M$_{\mbox{i+1}}$} and \texttt{M$_{\mbox{i+2}}$}.

\item Take a look at the default criteria used by this function: LOD = 5, maximum recombination fraction between adjacent markers = 0.35 and maximum recombination fraction between markers on the two ends = 0.55. Considering, for example, three markers A - B - C, in that order, the last criterion indicates the maximum recombination fraction acceptable between markers A and C. These values are used by the software to decide the most probable assignment and can be changed by the user:
<<eval=FALSE>>=
def.rf.3pts(example, "M18", "M8", "M13", LOD=10, max.rf=0.4)
def.rf.3pts(example, "M18", "M8", "M13", max.rf=0.4, max.nolink=0.60)
@ 
The arguments \texttt{max.rf} and \texttt{max.nolink} correspond to the maximum recombination fraction between adjacent markers and the maximum recombination fraction between markers on the two ends, respectively.

\item Do this step for all triplets of markers in linkage group 1:
<<eval=FALSE>>=
def.rf.3pts(example, "M18", "M8", "M13")
def.rf.3pts(example, "M8", "M13", "M7")
def.rf.3pts(example, "M13", "M7", "M22")
@ 
This last command line shows that the order \texttt{M13 - M7 - M22} is possibly incorrect, and a warning message is displayed. However, the HMM-based analyses use information from every marker in the sequence and, therefore, the order obtained through \texttt{compare} is likely to be the best order. Anyway, we had noticed that changing the positions of markers M7 and M22 resulted in an order with LOD-Score -0.02, which is very close to zero. This probably happens because M7 is of type D2 and M22 is of type D1.
\end{enumerate}

These three-point analyses were formerly used to check the final linkage map. In this new version, the best way to do this is using the new function \texttt{ripple}.

\end{document}

